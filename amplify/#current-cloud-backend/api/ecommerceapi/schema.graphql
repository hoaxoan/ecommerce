type User 
  @model
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  ownerId: ID!
  username: String
  name: String
  email: String
  createdAt: String
  updatedAt: String
  owner: String
  role: String
}

type Shop 
  @model
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  name: String!
  userId: ID
  createdAt: String
  updatedAt: String
  owner: String
}

type Category 
  @model
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  name: String!
  products: [Product] @connection(name: "ProductCategories", sortField: "createdAt")
  createdAt: String
  updatedAt: String
  owner: String
}

type Product 
  @model
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  name: String!
  price: Int
  category: Category @connection(name: "ProductCategories", sortField: "createdAt")
  images: [Image] @connection(name: "ProductImages", sortField: "createdAt")
  createdAt: String
  updatedAt: String
  owner: String
  categoryId: String
}


type Image
  @model
  @auth(rules: [{ allow: owner }])
{
  id: ID!
  fullsize: S3Object!
  thumbnail: S3Object
  contentType: String
  height: Int
  width: Int
  size: Int
  product: Product @connection(name: "ProductImages", sortField: "createdAt")
  createdAt: String
  updatedAt: String
  owner: String
}

type S3Object @aws_iam @aws_cognito_user_pools {
  region: String!
  bucket: String!
  key: String!
}